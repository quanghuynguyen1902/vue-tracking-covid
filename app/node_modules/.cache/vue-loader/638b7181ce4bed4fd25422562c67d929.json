{"remainingRequest":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/covid-tracking/my-app/src/components/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/src/components/map.vue","mtime":1590462293582},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1584971270451},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/babel-loader/lib/index.js","mtime":1584971270489},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1584971270451},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/vue-loader/lib/index.js","mtime":1588547163943}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7CiAgTE1hcCwKICBMVGlsZUxheWVyLAogIExDaXJjbGVNYXJrZXIsCiAgTFBvcHVwLAogIExHZW9Kc29uCn0gZnJvbSAidnVlMi1sZWFmbGV0IjsKaW1wb3J0IGNvdW50cmllc0dlb0pzb24gZnJvbSAiLi4vZGF0YS9jb3VudHJpZXMuanNvbiI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBMTWFwLAogICAgTFRpbGVMYXllciwKICAgIExDaXJjbGVNYXJrZXIsCiAgICBMUG9wdXAsCiAgICBMR2VvSnNvbgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVybDoKICAgICAgICAiaHR0cHM6Ly90aWxlcy5zdGFkaWFtYXBzLmNvbS90aWxlcy9hbGlkYWRlX3Ntb290aF9kYXJrL3t6fS97eH0ve3l9e3J9LnBuZyIsCiAgICAgIHpvb206IDMsCiAgICAgIGNlbnRlcjogWzkuNzc5MzQ5LCAxMDUuNjE4OTA0NSwgMTFdLAogICAgICBjb3VudHJpZXNfbG9jYXRpb246IFtdLAogICAgICBwcm92aW5jZXNfbG9jYXRpb246IFtdLAogICAgICBjaXRpZXNfbG9jYXRpb246IFtdLAogICAgICB0b3RhbDogewogICAgICAgIGNvbmZpcm1lZDogMCwKICAgICAgICBkZWFkOiAwLAogICAgICAgIHJlY292ZXJlZDogMAogICAgICB9LAogICAgICBjb2xvcjogIiMwMDAwMDAiLAogICAgICBjb3VudHJ5R2VvSnNvbjogY291bnRyaWVzR2VvSnNvbgogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmFkZF9SYWRpdXMoKTsKICAgIHRoaXMuZ2V0X3Byb3ZpbmNlcygpOwogICAgdGhpcy5nZXRfY2l0aWVzKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgb3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBvbkVhY2hGZWF0dXJlOiB0aGlzLm9uRWFjaEZlYXR1cmVGdW5jdGlvbgogICAgICB9OwogICAgfSwKICAgIHN0eWxlRnVuY3Rpb24oKSB7CiAgICAgIHJldHVybiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHdlaWdodDogMS41LAogICAgICAgICAgY29sb3I6IHRoaXMuY29sb3IsCiAgICAgICAgICBvcGFjaXR5OiAwLjUsCiAgICAgICAgICBmaWxsT3BhY2l0eTogMAogICAgICAgIH07CiAgICAgIH07CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB6b29tVXBkYXRlZCh6b29tKSB7CiAgICAgIHRoaXMuem9vbSA9IHpvb207CiAgICB9LAogICAgZ2V0X3Byb3ZpbmNlcygpIHsKICAgICAgY29uc3QgcGF0aCA9ICJodHRwczovL3d3dy50cmFja2Nvcm9uYS5saXZlL2FwaS9wcm92aW5jZXMiOwogICAgICBheGlvcy5nZXQocGF0aCkudGhlbihyZXMgPT4gewogICAgICAgIHRoaXMucHJvdmluY2VzX2xvY2F0aW9uID0gcmVzLmRhdGEuZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgYXN5bmMgZ2V0X2NpdGllcygpIHsKICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goImh0dHBzOi8vd3d3LnRyYWNrY29yb25hLmxpdmUvYXBpL2NpdGllcyIpOwogICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgdGhpcy5jaXRpZXNfbG9jYXRpb24gPSBhd2FpdCBkYXRhLmRhdGE7CiAgICB9LAogICAgYXN5bmMgYWRkX1JhZGl1cygpIHsKICAgICAgbGV0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goImh0dHBzOi8vd3d3LnRyYWNrY29yb25hLmxpdmUvYXBpL2NvdW50cmllcyIpOwogICAgICBsZXQgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTsKICAgICAgdGhpcy5jb3VudHJpZXNfbG9jYXRpb24gPSBhd2FpdCBkYXRhLmRhdGE7CgogICAgICBmb3IgKGxldCBpIGluIHRoaXMuY291bnRyaWVzX2xvY2F0aW9uKSB7CiAgICAgICAgdGhpcy50b3RhbC5jb25maXJtZWQgKz0gdGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkOwogICAgICAgIHRoaXMudG90YWwuZGVhZCArPSB0aGlzLmNvdW50cmllc19sb2NhdGlvbltpXS5kZWFkOwogICAgICAgIHRoaXMudG90YWwucmVjb3ZlcmVkICs9IHRoaXMuY291bnRyaWVzX2xvY2F0aW9uW2ldLnJlY292ZXJlZDsKICAgICAgICBpZiAodGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMTAwMCkgewogICAgICAgICAgdGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gODsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY291bnRyaWVzX2xvY2F0aW9uW2ldLmNvbmZpcm1lZCA8IDUwMDApIHsKICAgICAgICAgIHRoaXMuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDEwOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMTAwMDApIHsKICAgICAgICAgIHRoaXMuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDE1OwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMzAwMDApIHsKICAgICAgICAgIHRoaXMuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDIwOwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgNTAwMDApIHsKICAgICAgICAgIHRoaXMuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDI1OwogICAgICAgIH0gZWxzZSBpZiAodGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMTAwMDAwMCkgewogICAgICAgICAgdGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gMzU7CiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmNvdW50cmllc19sb2NhdGlvbltpXS5jb25maXJtZWQgPCAxMDAwMDAwMCkgewogICAgICAgICAgdGhpcy5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gNDA7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDA7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgaGlnaGxpZ2h0RmVhdHVyZShlKSB7CiAgICAgIHZhciBsYXllciA9IGUudGFyZ2V0OwogICAgICBsYXllci5zZXRTdHlsZSh7CiAgICAgICAgY29sb3I6ICIjZmZmZmZmIgogICAgICB9KTsKICAgIH0sCiAgICByZXNldEZlYXR1cmUoZSkgewogICAgICB2YXIgbGF5ZXIgPSBlLnRhcmdldDsKICAgICAgbGF5ZXIuc2V0U3R5bGUoewogICAgICAgIGNvbG9yOiAiIzAwMDAwMCIKICAgICAgfSk7CiAgICB9LAogICAgb25FYWNoRmVhdHVyZUZ1bmN0aW9uKGZlYXR1cmUsIGxheWVyKSB7CiAgICAgIGxheWVyLm9uKHsKICAgICAgICBtb3VzZW92ZXI6IHRoaXMuaGlnaGxpZ2h0RmVhdHVyZSwKICAgICAgICBtb3VzZW91dDogdGhpcy5yZXNldEZlYXR1cmUKICAgICAgfSkKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["map.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"map.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<body>\n  <l-map style=\"height:700px\" :zoom=\"zoom\" @update:zoom=\"zoomUpdated\" :center=\"center\">\n    <l-tile-layer :url=\"url\"></l-tile-layer>\n    <div class=\"marker\">\n      <!-- <div v-if=\"zoom > 0 && zoom < 5\">\n        <l-circle-marker\n          v-for=\"location in countries_location\"\n          :key=\"location.location\"\n          fillColor=\"red\"\n          color=\"red\"\n          :radius=\"location.radius\"\n          :fillOpacity=\"0.5\"\n          :lat-lng=\"[location.latitude, location.longitude]\"\n        >\n          <l-popup class=\"tagInfor\">\n            <div id=\"location\">{{location.location}}</div>\n            <div id=\"confirmed\">Confirmed: {{location.confirmed}}</div>\n            <div id=\"dead\">Dead: {{location.dead}}</div>\n            <div id=\"recovered\">Recovered: {{location.recovered}}</div>\n          </l-popup>\n        </l-circle-marker>\n      </div>-->\n      <div v-if=\"zoom >= 5 && zoom < 6\">\n        <l-circle-marker\n          v-for=\"location in provinces_location\"\n          :key=\"location.location\"\n          fillColor=\"red\"\n          color=\"red\"\n          :radius=\"5\"\n          :fillOpacity=\"1\"\n          :lat-lng=\"[location.latitude, location.longitude]\"\n        >\n          <l-popup class=\"tagInfor\">\n            <div id=\"location\">{{location.location}}</div>\n            <div id=\"confirmed\">Confirmed: {{location.confirmed}}</div>\n            <div id=\"dead\">Dead: {{location.dead}}</div>\n            <div id=\"recovered\">Recovered: {{location.recovered}}</div>\n          </l-popup>\n        </l-circle-marker>\n      </div>\n      <div v-if=\"zoom >= 6\">\n        <l-circle-marker\n          v-for=\"(location, index) in cities_location\"\n          :key=\"index\"\n          fillColor=\"red\"\n          color=\"white\"\n          :radius=\"3\"\n          :fillOpacity=\"1\"\n          :lat-lng=\"[location.latitude, location.longitude]\"\n        >\n          <l-popup class=\"tagInfor\">\n            <div id=\"location\">{{location.location}}</div>\n            <div id=\"confirmed\">Confirmed: {{location.confirmed}}</div>\n            <div id=\"dead\">Dead: {{location.dead}}</div>\n            <div id=\"recovered\">Recovered: {{location.recovered}}</div>\n          </l-popup>\n        </l-circle-marker>\n      </div>\n    </div>\n    <l-geo-json :geojson=\"countryGeoJson\" :options=\"options\" :options-style=\"styleFunction\"></l-geo-json>\n  </l-map>\n  <div class=\"infor\">\n    <div class=\"infor-confirmed\">\n      <div id=\"number\">{{this.total.confirmed.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}}</div>\n      <div id=\"text\">Confirmed</div>\n    </div>\n    <div class=\"infor-dead\">\n      <div id=\"number\">{{this.total.dead.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}}</div>\n      <div id=\"text\">Dead</div>\n    </div>\n    <div class=\"infor-recovered\">\n      <div id=\"number\">{{this.total.recovered.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}}</div>\n      <div id=\"text\">Recovered</div>\n    </div>\n  </div>\n</body>\n</template>\n\n<script>\nimport {\n  LMap,\n  LTileLayer,\n  LCircleMarker,\n  LPopup,\n  LGeoJson\n} from \"vue2-leaflet\";\nimport countriesGeoJson from \"../data/countries.json\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    LMap,\n    LTileLayer,\n    LCircleMarker,\n    LPopup,\n    LGeoJson\n  },\n  data() {\n    return {\n      url:\n        \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\",\n      zoom: 3,\n      center: [9.779349, 105.6189045, 11],\n      countries_location: [],\n      provinces_location: [],\n      cities_location: [],\n      total: {\n        confirmed: 0,\n        dead: 0,\n        recovered: 0\n      },\n      color: \"#000000\",\n      countryGeoJson: countriesGeoJson\n    };\n  },\n  mounted() {\n    this.add_Radius();\n    this.get_provinces();\n    this.get_cities();\n  },\n  computed: {\n    options() {\n      return {\n        onEachFeature: this.onEachFeatureFunction\n      };\n    },\n    styleFunction() {\n      return () => {\n        return {\n          weight: 1.5,\n          color: this.color,\n          opacity: 0.5,\n          fillOpacity: 0\n        };\n      };\n    }\n  },\n  methods: {\n    zoomUpdated(zoom) {\n      this.zoom = zoom;\n    },\n    get_provinces() {\n      const path = \"https://www.trackcorona.live/api/provinces\";\n      axios.get(path).then(res => {\n        this.provinces_location = res.data.data;\n      });\n    },\n    async get_cities() {\n      let response = await fetch(\"https://www.trackcorona.live/api/cities\");\n      let data = await response.json();\n      this.cities_location = await data.data;\n    },\n    async add_Radius() {\n      let response = await fetch(\"https://www.trackcorona.live/api/countries\");\n      let data = await response.json();\n      this.countries_location = await data.data;\n\n      for (let i in this.countries_location) {\n        this.total.confirmed += this.countries_location[i].confirmed;\n        this.total.dead += this.countries_location[i].dead;\n        this.total.recovered += this.countries_location[i].recovered;\n        if (this.countries_location[i].confirmed < 1000) {\n          this.countries_location[i][\"radius\"] = 8;\n        } else if (this.countries_location[i].confirmed < 5000) {\n          this.countries_location[i][\"radius\"] = 10;\n        } else if (this.countries_location[i].confirmed < 10000) {\n          this.countries_location[i][\"radius\"] = 15;\n        } else if (this.countries_location[i].confirmed < 30000) {\n          this.countries_location[i][\"radius\"] = 20;\n        } else if (this.countries_location[i].confirmed < 50000) {\n          this.countries_location[i][\"radius\"] = 25;\n        } else if (this.countries_location[i].confirmed < 1000000) {\n          this.countries_location[i][\"radius\"] = 35;\n        } else if (this.countries_location[i].confirmed < 10000000) {\n          this.countries_location[i][\"radius\"] = 40;\n        } else {\n          this.countries_location[i][\"radius\"] = 0;\n        }\n      }\n    },\n    highlightFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        color: \"#ffffff\"\n      });\n    },\n    resetFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        color: \"#000000\"\n      });\n    },\n    onEachFeatureFunction(feature, layer) {\n      layer.on({\n        mouseover: this.highlightFeature,\n        mouseout: this.resetFeature\n      })\n    }\n  }\n};\n</script>\n\n<style>\nbody {\n  width: 100%;\n  background-color: #000000;\n}\n\n.tagInfor #location {\n  color: #000000;\n  font-size: 20px;\n}\n\n.tagInfor #confirmed {\n  color: #e67300;\n}\n.tagInfor #dead {\n  color: #ff0000;\n}\n.tagInfor #recovered {\n  color: #00b300;\n}\n.infor {\n  position: absolute;\n  top: 700 px;\n  left: 500px;\n  right: 500px;\n}\n.infor-confirmed {\n  position: absolute;\n  top: 50px;\n  left: 0px;\n}\n.infor-confirmed #number {\n  font-size: 56px;\n  color: #e67300;\n}\n.infor-confirmed #text {\n  position: absolute;\n  left: 50px;\n  font-size: 24px;\n  color: rgb(155, 154, 154);\n}\n.infor-dead {\n  position: absolute;\n  top: 50px;\n  left: 375px;\n}\n.infor-dead #number {\n  font-size: 56px;\n  color: #ff0000;\n}\n.infor-dead #text {\n  position: absolute;\n  left: 50px;\n  font-size: 24px;\n  color: rgb(155, 154, 154);\n}\n.infor-recovered {\n  position: absolute;\n  top: 50px;\n  left: 700px;\n}\n.infor-recovered #number {\n  font-size: 56px;\n  color: #00b300;\n}\n.infor-recovered #text {\n  position: absolute;\n  left: 50px;\n  font-size: 24px;\n  color: rgb(155, 154, 154);\n}\n</style>"]}]}