{"remainingRequest":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/babel-loader/lib/index.js!/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/covid-tracking/my-app/src/components/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/src/components/map.vue","mtime":1590462293582},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1584971270451},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/babel-loader/lib/index.js","mtime":1584971270489},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1584971270451},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/vue-loader/lib/index.js","mtime":1588547163943}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3F1YW5naHV5L0Rlc2t0b3AvY292aWQtdHJhY2tpbmcvbXktYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgTE1hcCwgTFRpbGVMYXllciwgTENpcmNsZU1hcmtlciwgTFBvcHVwLCBMR2VvSnNvbiB9IGZyb20gInZ1ZTItbGVhZmxldCI7CmltcG9ydCBjb3VudHJpZXNHZW9Kc29uIGZyb20gIi4uL2RhdGEvY291bnRyaWVzLmpzb24iOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTE1hcDogTE1hcCwKICAgIExUaWxlTGF5ZXI6IExUaWxlTGF5ZXIsCiAgICBMQ2lyY2xlTWFya2VyOiBMQ2lyY2xlTWFya2VyLAogICAgTFBvcHVwOiBMUG9wdXAsCiAgICBMR2VvSnNvbjogTEdlb0pzb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1cmw6ICJodHRwczovL3RpbGVzLnN0YWRpYW1hcHMuY29tL3RpbGVzL2FsaWRhZGVfc21vb3RoX2Rhcmsve3p9L3t4fS97eX17cn0ucG5nIiwKICAgICAgem9vbTogMywKICAgICAgY2VudGVyOiBbOS43NzkzNDksIDEwNS42MTg5MDQ1LCAxMV0sCiAgICAgIGNvdW50cmllc19sb2NhdGlvbjogW10sCiAgICAgIHByb3ZpbmNlc19sb2NhdGlvbjogW10sCiAgICAgIGNpdGllc19sb2NhdGlvbjogW10sCiAgICAgIHRvdGFsOiB7CiAgICAgICAgY29uZmlybWVkOiAwLAogICAgICAgIGRlYWQ6IDAsCiAgICAgICAgcmVjb3ZlcmVkOiAwCiAgICAgIH0sCiAgICAgIGNvbG9yOiAiIzAwMDAwMCIsCiAgICAgIGNvdW50cnlHZW9Kc29uOiBjb3VudHJpZXNHZW9Kc29uCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuYWRkX1JhZGl1cygpOwogICAgdGhpcy5nZXRfcHJvdmluY2VzKCk7CiAgICB0aGlzLmdldF9jaXRpZXMoKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBvcHRpb25zOiBmdW5jdGlvbiBvcHRpb25zKCkgewogICAgICByZXR1cm4gewogICAgICAgIG9uRWFjaEZlYXR1cmU6IHRoaXMub25FYWNoRmVhdHVyZUZ1bmN0aW9uCiAgICAgIH07CiAgICB9LAogICAgc3R5bGVGdW5jdGlvbjogZnVuY3Rpb24gc3R5bGVGdW5jdGlvbigpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHdlaWdodDogMS41LAogICAgICAgICAgY29sb3I6IF90aGlzLmNvbG9yLAogICAgICAgICAgb3BhY2l0eTogMC41LAogICAgICAgICAgZmlsbE9wYWNpdHk6IDAKICAgICAgICB9OwogICAgICB9OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgem9vbVVwZGF0ZWQ6IGZ1bmN0aW9uIHpvb21VcGRhdGVkKHpvb20pIHsKICAgICAgdGhpcy56b29tID0gem9vbTsKICAgIH0sCiAgICBnZXRfcHJvdmluY2VzOiBmdW5jdGlvbiBnZXRfcHJvdmluY2VzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gImh0dHBzOi8vd3d3LnRyYWNrY29yb25hLmxpdmUvYXBpL3Byb3ZpbmNlcyI7CiAgICAgIGF4aW9zLmdldChwYXRoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIucHJvdmluY2VzX2xvY2F0aW9uID0gcmVzLmRhdGEuZGF0YTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0X2NpdGllczogZnVuY3Rpb24gZ2V0X2NpdGllcygpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cHM6Ly93d3cudHJhY2tjb3JvbmEubGl2ZS9hcGkvY2l0aWVzIik7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF90aGlzMy5jaXRpZXNfbG9jYXRpb24gPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgYWRkX1JhZGl1czogZnVuY3Rpb24gYWRkX1JhZGl1cygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzcG9uc2UsIGRhdGEsIGk7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaCgiaHR0cHM6Ly93d3cudHJhY2tjb3JvbmEubGl2ZS9hcGkvY291bnRyaWVzIik7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gZGF0YS5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfdGhpczQuY291bnRyaWVzX2xvY2F0aW9uID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgZm9yIChpIGluIF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb24pIHsKICAgICAgICAgICAgICAgICAgX3RoaXM0LnRvdGFsLmNvbmZpcm1lZCArPSBfdGhpczQuY291bnRyaWVzX2xvY2F0aW9uW2ldLmNvbmZpcm1lZDsKICAgICAgICAgICAgICAgICAgX3RoaXM0LnRvdGFsLmRlYWQgKz0gX3RoaXM0LmNvdW50cmllc19sb2NhdGlvbltpXS5kZWFkOwogICAgICAgICAgICAgICAgICBfdGhpczQudG90YWwucmVjb3ZlcmVkICs9IF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV0ucmVjb3ZlcmVkOwoKICAgICAgICAgICAgICAgICAgaWYgKF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMTAwMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gODsKICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChfdGhpczQuY291bnRyaWVzX2xvY2F0aW9uW2ldLmNvbmZpcm1lZCA8IDUwMDApIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDEwOwogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMTAwMDApIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDE1OwogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMzAwMDApIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDIwOwogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgNTAwMDApIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDI1OwogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgMTAwMDAwMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gMzU7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXM0LmNvdW50cmllc19sb2NhdGlvbltpXS5jb25maXJtZWQgPCAxMDAwMDAwMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzNC5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gNDA7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXM0LmNvdW50cmllc19sb2NhdGlvbltpXVsicmFkaXVzIl0gPSAwOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBoaWdobGlnaHRGZWF0dXJlOiBmdW5jdGlvbiBoaWdobGlnaHRGZWF0dXJlKGUpIHsKICAgICAgdmFyIGxheWVyID0gZS50YXJnZXQ7CiAgICAgIGxheWVyLnNldFN0eWxlKHsKICAgICAgICBjb2xvcjogIiNmZmZmZmYiCiAgICAgIH0pOwogICAgfSwKICAgIHJlc2V0RmVhdHVyZTogZnVuY3Rpb24gcmVzZXRGZWF0dXJlKGUpIHsKICAgICAgdmFyIGxheWVyID0gZS50YXJnZXQ7CiAgICAgIGxheWVyLnNldFN0eWxlKHsKICAgICAgICBjb2xvcjogIiMwMDAwMDAiCiAgICAgIH0pOwogICAgfSwKICAgIG9uRWFjaEZlYXR1cmVGdW5jdGlvbjogZnVuY3Rpb24gb25FYWNoRmVhdHVyZUZ1bmN0aW9uKGZlYXR1cmUsIGxheWVyKSB7CiAgICAgIGxheWVyLm9uKHsKICAgICAgICBtb3VzZW92ZXI6IHRoaXMuaGlnaGxpZ2h0RmVhdHVyZSwKICAgICAgICBtb3VzZW91dDogdGhpcy5yZXNldEZlYXR1cmUKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<body>\n  <l-map style=\"height:700px\" :zoom=\"zoom\" @update:zoom=\"zoomUpdated\" :center=\"center\">\n    <l-tile-layer :url=\"url\"></l-tile-layer>\n    <div class=\"marker\">\n      <!-- <div v-if=\"zoom > 0 && zoom < 5\">\n        <l-circle-marker\n          v-for=\"location in countries_location\"\n          :key=\"location.location\"\n          fillColor=\"red\"\n          color=\"red\"\n          :radius=\"location.radius\"\n          :fillOpacity=\"0.5\"\n          :lat-lng=\"[location.latitude, location.longitude]\"\n        >\n          <l-popup class=\"tagInfor\">\n            <div id=\"location\">{{location.location}}</div>\n            <div id=\"confirmed\">Confirmed: {{location.confirmed}}</div>\n            <div id=\"dead\">Dead: {{location.dead}}</div>\n            <div id=\"recovered\">Recovered: {{location.recovered}}</div>\n          </l-popup>\n        </l-circle-marker>\n      </div>-->\n      <div v-if=\"zoom >= 5 && zoom < 6\">\n        <l-circle-marker\n          v-for=\"location in provinces_location\"\n          :key=\"location.location\"\n          fillColor=\"red\"\n          color=\"red\"\n          :radius=\"5\"\n          :fillOpacity=\"1\"\n          :lat-lng=\"[location.latitude, location.longitude]\"\n        >\n          <l-popup class=\"tagInfor\">\n            <div id=\"location\">{{location.location}}</div>\n            <div id=\"confirmed\">Confirmed: {{location.confirmed}}</div>\n            <div id=\"dead\">Dead: {{location.dead}}</div>\n            <div id=\"recovered\">Recovered: {{location.recovered}}</div>\n          </l-popup>\n        </l-circle-marker>\n      </div>\n      <div v-if=\"zoom >= 6\">\n        <l-circle-marker\n          v-for=\"(location, index) in cities_location\"\n          :key=\"index\"\n          fillColor=\"red\"\n          color=\"white\"\n          :radius=\"3\"\n          :fillOpacity=\"1\"\n          :lat-lng=\"[location.latitude, location.longitude]\"\n        >\n          <l-popup class=\"tagInfor\">\n            <div id=\"location\">{{location.location}}</div>\n            <div id=\"confirmed\">Confirmed: {{location.confirmed}}</div>\n            <div id=\"dead\">Dead: {{location.dead}}</div>\n            <div id=\"recovered\">Recovered: {{location.recovered}}</div>\n          </l-popup>\n        </l-circle-marker>\n      </div>\n    </div>\n    <l-geo-json :geojson=\"countryGeoJson\" :options=\"options\" :options-style=\"styleFunction\"></l-geo-json>\n  </l-map>\n  <div class=\"infor\">\n    <div class=\"infor-confirmed\">\n      <div id=\"number\">{{this.total.confirmed.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}}</div>\n      <div id=\"text\">Confirmed</div>\n    </div>\n    <div class=\"infor-dead\">\n      <div id=\"number\">{{this.total.dead.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}}</div>\n      <div id=\"text\">Dead</div>\n    </div>\n    <div class=\"infor-recovered\">\n      <div id=\"number\">{{this.total.recovered.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')}}</div>\n      <div id=\"text\">Recovered</div>\n    </div>\n  </div>\n</body>\n</template>\n\n<script>\nimport {\n  LMap,\n  LTileLayer,\n  LCircleMarker,\n  LPopup,\n  LGeoJson\n} from \"vue2-leaflet\";\nimport countriesGeoJson from \"../data/countries.json\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    LMap,\n    LTileLayer,\n    LCircleMarker,\n    LPopup,\n    LGeoJson\n  },\n  data() {\n    return {\n      url:\n        \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\",\n      zoom: 3,\n      center: [9.779349, 105.6189045, 11],\n      countries_location: [],\n      provinces_location: [],\n      cities_location: [],\n      total: {\n        confirmed: 0,\n        dead: 0,\n        recovered: 0\n      },\n      color: \"#000000\",\n      countryGeoJson: countriesGeoJson\n    };\n  },\n  mounted() {\n    this.add_Radius();\n    this.get_provinces();\n    this.get_cities();\n  },\n  computed: {\n    options() {\n      return {\n        onEachFeature: this.onEachFeatureFunction\n      };\n    },\n    styleFunction() {\n      return () => {\n        return {\n          weight: 1.5,\n          color: this.color,\n          opacity: 0.5,\n          fillOpacity: 0\n        };\n      };\n    }\n  },\n  methods: {\n    zoomUpdated(zoom) {\n      this.zoom = zoom;\n    },\n    get_provinces() {\n      const path = \"https://www.trackcorona.live/api/provinces\";\n      axios.get(path).then(res => {\n        this.provinces_location = res.data.data;\n      });\n    },\n    async get_cities() {\n      let response = await fetch(\"https://www.trackcorona.live/api/cities\");\n      let data = await response.json();\n      this.cities_location = await data.data;\n    },\n    async add_Radius() {\n      let response = await fetch(\"https://www.trackcorona.live/api/countries\");\n      let data = await response.json();\n      this.countries_location = await data.data;\n\n      for (let i in this.countries_location) {\n        this.total.confirmed += this.countries_location[i].confirmed;\n        this.total.dead += this.countries_location[i].dead;\n        this.total.recovered += this.countries_location[i].recovered;\n        if (this.countries_location[i].confirmed < 1000) {\n          this.countries_location[i][\"radius\"] = 8;\n        } else if (this.countries_location[i].confirmed < 5000) {\n          this.countries_location[i][\"radius\"] = 10;\n        } else if (this.countries_location[i].confirmed < 10000) {\n          this.countries_location[i][\"radius\"] = 15;\n        } else if (this.countries_location[i].confirmed < 30000) {\n          this.countries_location[i][\"radius\"] = 20;\n        } else if (this.countries_location[i].confirmed < 50000) {\n          this.countries_location[i][\"radius\"] = 25;\n        } else if (this.countries_location[i].confirmed < 1000000) {\n          this.countries_location[i][\"radius\"] = 35;\n        } else if (this.countries_location[i].confirmed < 10000000) {\n          this.countries_location[i][\"radius\"] = 40;\n        } else {\n          this.countries_location[i][\"radius\"] = 0;\n        }\n      }\n    },\n    highlightFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        color: \"#ffffff\"\n      });\n    },\n    resetFeature(e) {\n      var layer = e.target;\n      layer.setStyle({\n        color: \"#000000\"\n      });\n    },\n    onEachFeatureFunction(feature, layer) {\n      layer.on({\n        mouseover: this.highlightFeature,\n        mouseout: this.resetFeature\n      })\n    }\n  }\n};\n</script>\n\n<style>\nbody {\n  width: 100%;\n  background-color: #000000;\n}\n\n.tagInfor #location {\n  color: #000000;\n  font-size: 20px;\n}\n\n.tagInfor #confirmed {\n  color: #e67300;\n}\n.tagInfor #dead {\n  color: #ff0000;\n}\n.tagInfor #recovered {\n  color: #00b300;\n}\n.infor {\n  position: absolute;\n  top: 700 px;\n  left: 500px;\n  right: 500px;\n}\n.infor-confirmed {\n  position: absolute;\n  top: 50px;\n  left: 0px;\n}\n.infor-confirmed #number {\n  font-size: 56px;\n  color: #e67300;\n}\n.infor-confirmed #text {\n  position: absolute;\n  left: 50px;\n  font-size: 24px;\n  color: rgb(155, 154, 154);\n}\n.infor-dead {\n  position: absolute;\n  top: 50px;\n  left: 375px;\n}\n.infor-dead #number {\n  font-size: 56px;\n  color: #ff0000;\n}\n.infor-dead #text {\n  position: absolute;\n  left: 50px;\n  font-size: 24px;\n  color: rgb(155, 154, 154);\n}\n.infor-recovered {\n  position: absolute;\n  top: 50px;\n  left: 700px;\n}\n.infor-recovered #number {\n  font-size: 56px;\n  color: #00b300;\n}\n.infor-recovered #text {\n  position: absolute;\n  left: 50px;\n  font-size: 24px;\n  color: rgb(155, 154, 154);\n}\n</style>"],"sourceRoot":"src/components"}]}