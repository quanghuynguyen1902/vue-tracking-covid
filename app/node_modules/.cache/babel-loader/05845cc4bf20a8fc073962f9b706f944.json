{"remainingRequest":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/thread-loader/dist/cjs.js!/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/babel-loader/lib/index.js!/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/quanghuy/Desktop/covid-tracking/my-app/src/components/map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/src/components/map.vue","mtime":1589808611994},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1584971270451},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/thread-loader/dist/cjs.js","mtime":1584971270462},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/babel-loader/lib/index.js","mtime":1584971270489},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/cache-loader/dist/cjs.js","mtime":1584971270451},{"path":"/home/quanghuy/Desktop/covid-tracking/my-app/node_modules/vue-loader/lib/index.js","mtime":1588547163943}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3F1YW5naHV5L0Rlc2t0b3AvY292aWQtdHJhY2tpbmcvbXktYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgTE1hcCwgTFRpbGVMYXllciwgTENpcmNsZU1hcmtlciwgTFBvcHVwIH0gZnJvbSAidnVlMi1sZWFmbGV0IjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIExNYXA6IExNYXAsCiAgICBMVGlsZUxheWVyOiBMVGlsZUxheWVyLAogICAgTENpcmNsZU1hcmtlcjogTENpcmNsZU1hcmtlciwKICAgIExQb3B1cDogTFBvcHVwCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXJsOiAiaHR0cHM6Ly90aWxlcy5zdGFkaWFtYXBzLmNvbS90aWxlcy9hbGlkYWRlX3Ntb290aF9kYXJrL3t6fS97eH0ve3l9e3J9LnBuZyIsCiAgICAgIHpvb206IDMsCiAgICAgIGNlbnRlcjogWzkuNzc5MzQ5LCAxMDUuNjE4OTA0NSwgMTFdLAogICAgICBjb3VudHJpZXNfbG9jYXRpb246IFtdLAogICAgICBwcm92aW5jZXNfbG9jYXRpb246IFtdLAogICAgICBjaXRpZXNfbG9jYXRpb246IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuYWRkX1JhZGl1cygpOwogICAgdGhpcy5nZXRfcHJvdmluY2VzKCk7CiAgICB0aGlzLmdldF9jaXRpZXMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHpvb21VcGRhdGVkOiBmdW5jdGlvbiB6b29tVXBkYXRlZCh6b29tKSB7CiAgICAgIHRoaXMuem9vbSA9IHpvb207CiAgICB9LAogICAgZ2V0X3Byb3ZpbmNlczogZnVuY3Rpb24gZ2V0X3Byb3ZpbmNlcygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBwYXRoID0gImh0dHBzOi8vd3d3LnRyYWNrY29yb25hLmxpdmUvYXBpL3Byb3ZpbmNlcyI7CiAgICAgIGF4aW9zLmdldChwYXRoKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5wcm92aW5jZXNfbG9jYXRpb24gPSByZXMuZGF0YS5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRfY2l0aWVzOiBmdW5jdGlvbiBnZXRfY2l0aWVzKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwczovL3d3dy50cmFja2Nvcm9uYS5saXZlL2FwaS9jaXRpZXMiKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgcmV0dXJuIGRhdGEuZGF0YTsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX3RoaXMyLmNpdGllc19sb2NhdGlvbiA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBhZGRfUmFkaXVzOiBmdW5jdGlvbiBhZGRfUmFkaXVzKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXNwb25zZSwgZGF0YSwgaTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKCJodHRwczovL3d3dy50cmFja2Nvcm9uYS5saXZlL2FwaS9jb3VudHJpZXMiKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gODsKICAgICAgICAgICAgICAgIHJldHVybiBkYXRhLmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF90aGlzMy5jb3VudHJpZXNfbG9jYXRpb24gPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgICBmb3IgKGkgaW4gX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbikgewogICAgICAgICAgICAgICAgICBpZiAoX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbltpXS5jb25maXJtZWQgPCAxMDAwKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbltpXVsicmFkaXVzIl0gPSA4OwogICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKF90aGlzMy5jb3VudHJpZXNfbG9jYXRpb25baV0uY29uZmlybWVkIDwgNTAwMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzMy5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gMTA7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbltpXS5jb25maXJtZWQgPCAxMDAwMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzMy5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gMTU7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbltpXS5jb25maXJtZWQgPCAzMDAwMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzMy5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gMjA7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbltpXS5jb25maXJtZWQgPCA1MDAwMCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzMy5jb3VudHJpZXNfbG9jYXRpb25baV1bInJhZGl1cyJdID0gMjU7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbltpXS5jb25maXJtZWQgPCAxMDAwMDAwKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMzLmNvdW50cmllc19sb2NhdGlvbltpXVsicmFkaXVzIl0gPSAzNTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczMuY291bnRyaWVzX2xvY2F0aW9uW2ldWyJyYWRpdXMiXSA9IDA7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["map.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <l-map style=\"height:1080px\" :zoom=\"zoom\" @update:zoom=\"zoomUpdated\" :center=\"center\">\n    <l-tile-layer :url=\"url\"></l-tile-layer>\n    <div v-if=\"zoom > 0 && zoom < 4\">\n      <l-circle-marker\n        v-for=\"location in countries_location\"\n        :key=\"location.location\"\n        fillColor=\"red\"\n        color=\"red\"\n        :radius=\"location.radius\"\n        :fillOpacity=\"0.5\"\n        :lat-lng=\"[location.latitude, location.longitude]\"\n      >\n        <l-popup>\n          <p>Confirmed: {{location.confirmed}}</p>\n          Dead: {{location.dead}}\n          <br />\n          Recovered: {{location.recovered}}\n        </l-popup>\n      </l-circle-marker>\n    </div>\n    <div v-if=\"zoom >= 4 && zoom < 6\">\n      <l-circle-marker\n        v-for=\"location in provinces_location\"\n        :key=\"location.location\"\n        fillColor=\"red\"\n        color=\"red\"\n        :radius=\"5\"\n        :fillOpacity=\"1\"\n        :lat-lng=\"[location.latitude, location.longitude]\"\n      >\n        <l-popup>\n          <p>Confirmed: {{location.confirmed}}</p>\n          Dead: {{location.dead}}\n          <br />\n          Recovered: {{location.recovered}}\n        </l-popup>\n      </l-circle-marker>\n    </div>\n    <div v-if=\"zoom >= 6\">\n      <l-circle-marker\n        v-for=\"(location, index) in cities_location\"\n        :key=\"index\"\n        fillColor=\"red\"\n        color=\"white\"\n        :radius=\"5\"\n        :fillOpacity=\"1\"\n        :lat-lng=\"[location.latitude, location.longitude]\"\n      >\n        <l-popup>\n          <p>Confirmed: {{location.confirmed}}</p>\n          Dead: {{location.dead}}\n          <br />\n          Recovered: {{location.recovered}}\n        </l-popup>\n      </l-circle-marker>\n    </div>\n  </l-map>\n</template>\n\n<script>\nimport { LMap, LTileLayer, LCircleMarker, LPopup } from \"vue2-leaflet\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    LMap,\n    LTileLayer,\n    LCircleMarker,\n    LPopup\n  },\n  data() {\n    return {\n      url:\n        \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\",\n      zoom: 3,\n      center: [9.779349, 105.6189045, 11],\n      countries_location: [],\n      provinces_location: [],\n      cities_location: []\n    };\n  },\n  mounted() {\n    this.add_Radius();\n    this.get_provinces();\n    this.get_cities();\n  },\n  methods: {\n    zoomUpdated(zoom) {\n      this.zoom = zoom;\n    },\n    get_provinces() {\n      const path = \"https://www.trackcorona.live/api/provinces\";\n      axios.get(path).then(res => {\n        this.provinces_location = res.data.data;\n      });\n    },\n    async get_cities() {\n      let response = await fetch(\"https://www.trackcorona.live/api/cities\");\n      let data = await response.json();\n      this.cities_location = await data.data;\n    },\n    async add_Radius() {\n      let response = await fetch(\"https://www.trackcorona.live/api/countries\");\n      let data = await response.json();\n      this.countries_location = await data.data;\n\n      for (let i in this.countries_location) {\n        if (this.countries_location[i].confirmed < 1000) {\n          this.countries_location[i][\"radius\"] = 8;\n        } else if (this.countries_location[i].confirmed < 5000) {\n          this.countries_location[i][\"radius\"] = 10;\n        } else if (this.countries_location[i].confirmed < 10000) {\n          this.countries_location[i][\"radius\"] = 15;\n        } else if (this.countries_location[i].confirmed < 30000) {\n          this.countries_location[i][\"radius\"] = 20;\n        } else if (this.countries_location[i].confirmed < 50000) {\n          this.countries_location[i][\"radius\"] = 25;\n        } else if (this.countries_location[i].confirmed < 1000000) {\n          this.countries_location[i][\"radius\"] = 35;\n        } else {\n          this.countries_location[i][\"radius\"] = 0;\n        }\n      }\n    }\n  }\n};\n</script>"],"sourceRoot":"src/components"}]}